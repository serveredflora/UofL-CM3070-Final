//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""16a0fe03-65db-46a2-b789-9ed75238c9d2"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""fd2ab8d3-4ba2-4b39-88ee-5ea843f1fea2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""21539a32-4cb5-40b7-ba7f-df95a9699a89"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""dada3f77-5077-4d08-b909-5d2ab996d8d7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""36a12e47-8c59-4318-84d2-09f7499ae208"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""aef526fd-edb9-4dcf-b2fc-3fb278965e99"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponPrimary"",
                    ""type"": ""Button"",
                    ""id"": ""f8363464-872f-4277-ac05-be9d9cb89848"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""b60442aa-08fa-45ff-8f99-b8fc8b646c6b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionPerform"",
                    ""type"": ""Button"",
                    ""id"": ""fa426b50-b806-4cb8-afbd-8ae98d8c9db8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionCycleNegative"",
                    ""type"": ""Button"",
                    ""id"": ""52339912-444c-44b9-88fc-5106ff78fe05"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InteractionCyclePositive"",
                    ""type"": ""Button"",
                    ""id"": ""069cde0b-cf4a-4251-8ec7-cffcbeb7c768"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""20f1d523-eaf8-4d29-85d4-217affce869d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarSlotOne"",
                    ""type"": ""Button"",
                    ""id"": ""ef1e3207-0801-49f9-8050-897efa83c345"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarSlotTwo"",
                    ""type"": ""Button"",
                    ""id"": ""5e27933c-9cf7-4af8-9b79-dfa3f463783c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarSlotThree"",
                    ""type"": ""Button"",
                    ""id"": ""5721c473-269f-49d7-84b8-0db6eeb8d624"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarSlotFour"",
                    ""type"": ""Button"",
                    ""id"": ""efa9bb9a-3f33-418f-81ed-a99a9f168a57"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePause"",
                    ""type"": ""Button"",
                    ""id"": ""e36c0a85-5006-4079-b046-28e5bad84072"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b6ab9527-a945-4ed4-a26c-89f524491231"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2a85ef59-20b9-43fd-9750-fb7fe70873e9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""22f6fed2-d12b-4006-bf0f-383b4f28573f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9008a815-d649-4a4f-957a-8acbc4275a70"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6922c6de-0e54-46d1-b3ea-eb36802ff071"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5f34c0da-d65e-43db-8a19-dfd8b76f92a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a5ff6cc7-324a-4d80-946b-ff490ed84d61"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a757053a-9afc-44f1-93b6-456bd9ba0081"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0ed9e29-d8e4-41c0-aabd-ae8672d3dc0e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b24955e-dae1-45e6-8560-6d127fdf9ab9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49db6e53-adb9-4ee7-b840-67b944ca8c46"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""013c9c5b-eb7c-47e8-9f18-1230379050c6"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionPerform"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a20ebb50-5185-4cdd-87d0-18b177f6ef25"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e92187b-bd4e-4a5e-9b32-9d176fd5866f"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42c1c119-1822-4d94-a516-5695e42af34a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotbarSlotOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61aadbbd-10da-4120-9441-e8b15f96c8be"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotbarSlotTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65843c1c-d55c-484a-8c54-9bcf242933a4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotbarSlotThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73a75ff3-3806-435f-87e8-731b947d4981"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotbarSlotFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5402191-db70-46d9-a02b-1919c6d0e30c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionCycleNegative"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f0793cd-0acb-4a80-8d6d-c61d0cf1b886"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionCyclePositive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3176274f-4bf7-4843-871d-1233bb0654c0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f84c6aa3-3f48-44f6-b264-01aeb33c0f96"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""550b694f-86a8-45d3-8ff9-2f8e58c562a3"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""a122a4f4-d96f-4043-b1d9-b43c9edc4aa5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4a3acf13-6147-49c3-ab25-9c460dedb9d7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Look = m_Gameplay.FindAction("Look", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_Crouch = m_Gameplay.FindAction("Crouch", throwIfNotFound: true);
        m_Gameplay_Sprint = m_Gameplay.FindAction("Sprint", throwIfNotFound: true);
        m_Gameplay_WeaponPrimary = m_Gameplay.FindAction("WeaponPrimary", throwIfNotFound: true);
        m_Gameplay_WeaponSecondary = m_Gameplay.FindAction("WeaponSecondary", throwIfNotFound: true);
        m_Gameplay_InteractionPerform = m_Gameplay.FindAction("InteractionPerform", throwIfNotFound: true);
        m_Gameplay_InteractionCycleNegative = m_Gameplay.FindAction("InteractionCycleNegative", throwIfNotFound: true);
        m_Gameplay_InteractionCyclePositive = m_Gameplay.FindAction("InteractionCyclePositive", throwIfNotFound: true);
        m_Gameplay_Inventory = m_Gameplay.FindAction("Inventory", throwIfNotFound: true);
        m_Gameplay_HotbarSlotOne = m_Gameplay.FindAction("HotbarSlotOne", throwIfNotFound: true);
        m_Gameplay_HotbarSlotTwo = m_Gameplay.FindAction("HotbarSlotTwo", throwIfNotFound: true);
        m_Gameplay_HotbarSlotThree = m_Gameplay.FindAction("HotbarSlotThree", throwIfNotFound: true);
        m_Gameplay_HotbarSlotFour = m_Gameplay.FindAction("HotbarSlotFour", throwIfNotFound: true);
        m_Gameplay_TogglePause = m_Gameplay.FindAction("TogglePause", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
    }

    ~@PlayerInputActions()
    {
        UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, PlayerInputActions.Gameplay.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, PlayerInputActions.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Look;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_Crouch;
    private readonly InputAction m_Gameplay_Sprint;
    private readonly InputAction m_Gameplay_WeaponPrimary;
    private readonly InputAction m_Gameplay_WeaponSecondary;
    private readonly InputAction m_Gameplay_InteractionPerform;
    private readonly InputAction m_Gameplay_InteractionCycleNegative;
    private readonly InputAction m_Gameplay_InteractionCyclePositive;
    private readonly InputAction m_Gameplay_Inventory;
    private readonly InputAction m_Gameplay_HotbarSlotOne;
    private readonly InputAction m_Gameplay_HotbarSlotTwo;
    private readonly InputAction m_Gameplay_HotbarSlotThree;
    private readonly InputAction m_Gameplay_HotbarSlotFour;
    private readonly InputAction m_Gameplay_TogglePause;
    public struct GameplayActions
    {
        private @PlayerInputActions m_Wrapper;
        public GameplayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_Gameplay_Look;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @Crouch => m_Wrapper.m_Gameplay_Crouch;
        public InputAction @Sprint => m_Wrapper.m_Gameplay_Sprint;
        public InputAction @WeaponPrimary => m_Wrapper.m_Gameplay_WeaponPrimary;
        public InputAction @WeaponSecondary => m_Wrapper.m_Gameplay_WeaponSecondary;
        public InputAction @InteractionPerform => m_Wrapper.m_Gameplay_InteractionPerform;
        public InputAction @InteractionCycleNegative => m_Wrapper.m_Gameplay_InteractionCycleNegative;
        public InputAction @InteractionCyclePositive => m_Wrapper.m_Gameplay_InteractionCyclePositive;
        public InputAction @Inventory => m_Wrapper.m_Gameplay_Inventory;
        public InputAction @HotbarSlotOne => m_Wrapper.m_Gameplay_HotbarSlotOne;
        public InputAction @HotbarSlotTwo => m_Wrapper.m_Gameplay_HotbarSlotTwo;
        public InputAction @HotbarSlotThree => m_Wrapper.m_Gameplay_HotbarSlotThree;
        public InputAction @HotbarSlotFour => m_Wrapper.m_Gameplay_HotbarSlotFour;
        public InputAction @TogglePause => m_Wrapper.m_Gameplay_TogglePause;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @WeaponPrimary.started += instance.OnWeaponPrimary;
            @WeaponPrimary.performed += instance.OnWeaponPrimary;
            @WeaponPrimary.canceled += instance.OnWeaponPrimary;
            @WeaponSecondary.started += instance.OnWeaponSecondary;
            @WeaponSecondary.performed += instance.OnWeaponSecondary;
            @WeaponSecondary.canceled += instance.OnWeaponSecondary;
            @InteractionPerform.started += instance.OnInteractionPerform;
            @InteractionPerform.performed += instance.OnInteractionPerform;
            @InteractionPerform.canceled += instance.OnInteractionPerform;
            @InteractionCycleNegative.started += instance.OnInteractionCycleNegative;
            @InteractionCycleNegative.performed += instance.OnInteractionCycleNegative;
            @InteractionCycleNegative.canceled += instance.OnInteractionCycleNegative;
            @InteractionCyclePositive.started += instance.OnInteractionCyclePositive;
            @InteractionCyclePositive.performed += instance.OnInteractionCyclePositive;
            @InteractionCyclePositive.canceled += instance.OnInteractionCyclePositive;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @HotbarSlotOne.started += instance.OnHotbarSlotOne;
            @HotbarSlotOne.performed += instance.OnHotbarSlotOne;
            @HotbarSlotOne.canceled += instance.OnHotbarSlotOne;
            @HotbarSlotTwo.started += instance.OnHotbarSlotTwo;
            @HotbarSlotTwo.performed += instance.OnHotbarSlotTwo;
            @HotbarSlotTwo.canceled += instance.OnHotbarSlotTwo;
            @HotbarSlotThree.started += instance.OnHotbarSlotThree;
            @HotbarSlotThree.performed += instance.OnHotbarSlotThree;
            @HotbarSlotThree.canceled += instance.OnHotbarSlotThree;
            @HotbarSlotFour.started += instance.OnHotbarSlotFour;
            @HotbarSlotFour.performed += instance.OnHotbarSlotFour;
            @HotbarSlotFour.canceled += instance.OnHotbarSlotFour;
            @TogglePause.started += instance.OnTogglePause;
            @TogglePause.performed += instance.OnTogglePause;
            @TogglePause.canceled += instance.OnTogglePause;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @WeaponPrimary.started -= instance.OnWeaponPrimary;
            @WeaponPrimary.performed -= instance.OnWeaponPrimary;
            @WeaponPrimary.canceled -= instance.OnWeaponPrimary;
            @WeaponSecondary.started -= instance.OnWeaponSecondary;
            @WeaponSecondary.performed -= instance.OnWeaponSecondary;
            @WeaponSecondary.canceled -= instance.OnWeaponSecondary;
            @InteractionPerform.started -= instance.OnInteractionPerform;
            @InteractionPerform.performed -= instance.OnInteractionPerform;
            @InteractionPerform.canceled -= instance.OnInteractionPerform;
            @InteractionCycleNegative.started -= instance.OnInteractionCycleNegative;
            @InteractionCycleNegative.performed -= instance.OnInteractionCycleNegative;
            @InteractionCycleNegative.canceled -= instance.OnInteractionCycleNegative;
            @InteractionCyclePositive.started -= instance.OnInteractionCyclePositive;
            @InteractionCyclePositive.performed -= instance.OnInteractionCyclePositive;
            @InteractionCyclePositive.canceled -= instance.OnInteractionCyclePositive;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @HotbarSlotOne.started -= instance.OnHotbarSlotOne;
            @HotbarSlotOne.performed -= instance.OnHotbarSlotOne;
            @HotbarSlotOne.canceled -= instance.OnHotbarSlotOne;
            @HotbarSlotTwo.started -= instance.OnHotbarSlotTwo;
            @HotbarSlotTwo.performed -= instance.OnHotbarSlotTwo;
            @HotbarSlotTwo.canceled -= instance.OnHotbarSlotTwo;
            @HotbarSlotThree.started -= instance.OnHotbarSlotThree;
            @HotbarSlotThree.performed -= instance.OnHotbarSlotThree;
            @HotbarSlotThree.canceled -= instance.OnHotbarSlotThree;
            @HotbarSlotFour.started -= instance.OnHotbarSlotFour;
            @HotbarSlotFour.performed -= instance.OnHotbarSlotFour;
            @HotbarSlotFour.canceled -= instance.OnHotbarSlotFour;
            @TogglePause.started -= instance.OnTogglePause;
            @TogglePause.performed -= instance.OnTogglePause;
            @TogglePause.canceled -= instance.OnTogglePause;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Back;
    public struct UIActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGameplayActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnWeaponPrimary(InputAction.CallbackContext context);
        void OnWeaponSecondary(InputAction.CallbackContext context);
        void OnInteractionPerform(InputAction.CallbackContext context);
        void OnInteractionCycleNegative(InputAction.CallbackContext context);
        void OnInteractionCyclePositive(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnHotbarSlotOne(InputAction.CallbackContext context);
        void OnHotbarSlotTwo(InputAction.CallbackContext context);
        void OnHotbarSlotThree(InputAction.CallbackContext context);
        void OnHotbarSlotFour(InputAction.CallbackContext context);
        void OnTogglePause(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnBack(InputAction.CallbackContext context);
    }
}
